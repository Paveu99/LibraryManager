/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as RegisterIndexImport } from './routes/register/index'
import { Route as LogsHistoryIndexImport } from './routes/logs-history/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as BooksIndexImport } from './routes/books/index'
import { Route as UserWrapperImport } from './routes/user/_wrapper'
import { Route as BooksIdImport } from './routes/books/$id'
import { Route as AdminWrapperImport } from './routes/admin/_wrapper'
import { Route as UserWrapperIndexImport } from './routes/user/_wrapper/index'
import { Route as AdminWrapperIndexImport } from './routes/admin/_wrapper/index'
import { Route as UserWrapperStatsIndexImport } from './routes/user/_wrapper/stats/index'
import { Route as UserWrapperRentalsIndexImport } from './routes/user/_wrapper/rentals/index'
import { Route as UserWrapperDetailsIndexImport } from './routes/user/_wrapper/details/index'
import { Route as UserWrapperDeleteAccountIndexImport } from './routes/user/_wrapper/delete-account/index'
import { Route as AdminWrapperRentalsIndexImport } from './routes/admin/_wrapper/rentals/index'
import { Route as AdminWrapperBooksIndexImport } from './routes/admin/_wrapper/books/index'
import { Route as AdminWrapperRentalsIdImport } from './routes/admin/_wrapper/rentals/$id'

// Create Virtual Routes

const UserImport = createFileRoute('/user')()
const AdminImport = createFileRoute('/admin')()

// Create/Update Routes

const UserRoute = UserImport.update({
  id: '/user',
  path: '/user',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RegisterIndexRoute = RegisterIndexImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => rootRoute,
} as any)

const LogsHistoryIndexRoute = LogsHistoryIndexImport.update({
  id: '/logs-history/',
  path: '/logs-history/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const BooksIndexRoute = BooksIndexImport.update({
  id: '/books/',
  path: '/books/',
  getParentRoute: () => rootRoute,
} as any)

const UserWrapperRoute = UserWrapperImport.update({
  id: '/_wrapper',
  getParentRoute: () => UserRoute,
} as any)

const BooksIdRoute = BooksIdImport.update({
  id: '/books/$id',
  path: '/books/$id',
  getParentRoute: () => rootRoute,
} as any)

const AdminWrapperRoute = AdminWrapperImport.update({
  id: '/_wrapper',
  getParentRoute: () => AdminRoute,
} as any)

const UserWrapperIndexRoute = UserWrapperIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UserWrapperRoute,
} as any)

const AdminWrapperIndexRoute = AdminWrapperIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminWrapperRoute,
} as any)

const UserWrapperStatsIndexRoute = UserWrapperStatsIndexImport.update({
  id: '/stats/',
  path: '/stats/',
  getParentRoute: () => UserWrapperRoute,
} as any)

const UserWrapperRentalsIndexRoute = UserWrapperRentalsIndexImport.update({
  id: '/rentals/',
  path: '/rentals/',
  getParentRoute: () => UserWrapperRoute,
} as any)

const UserWrapperDetailsIndexRoute = UserWrapperDetailsIndexImport.update({
  id: '/details/',
  path: '/details/',
  getParentRoute: () => UserWrapperRoute,
} as any)

const UserWrapperDeleteAccountIndexRoute =
  UserWrapperDeleteAccountIndexImport.update({
    id: '/delete-account/',
    path: '/delete-account/',
    getParentRoute: () => UserWrapperRoute,
  } as any)

const AdminWrapperRentalsIndexRoute = AdminWrapperRentalsIndexImport.update({
  id: '/rentals/',
  path: '/rentals/',
  getParentRoute: () => AdminWrapperRoute,
} as any)

const AdminWrapperBooksIndexRoute = AdminWrapperBooksIndexImport.update({
  id: '/books/',
  path: '/books/',
  getParentRoute: () => AdminWrapperRoute,
} as any)

const AdminWrapperRentalsIdRoute = AdminWrapperRentalsIdImport.update({
  id: '/rentals/$id',
  path: '/rentals/$id',
  getParentRoute: () => AdminWrapperRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/admin/_wrapper': {
      id: '/admin/_wrapper'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminWrapperImport
      parentRoute: typeof AdminRoute
    }
    '/books/$id': {
      id: '/books/$id'
      path: '/books/$id'
      fullPath: '/books/$id'
      preLoaderRoute: typeof BooksIdImport
      parentRoute: typeof rootRoute
    }
    '/user': {
      id: '/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserImport
      parentRoute: typeof rootRoute
    }
    '/user/_wrapper': {
      id: '/user/_wrapper'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserWrapperImport
      parentRoute: typeof UserRoute
    }
    '/books/': {
      id: '/books/'
      path: '/books'
      fullPath: '/books'
      preLoaderRoute: typeof BooksIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/logs-history/': {
      id: '/logs-history/'
      path: '/logs-history'
      fullPath: '/logs-history'
      preLoaderRoute: typeof LogsHistoryIndexImport
      parentRoute: typeof rootRoute
    }
    '/register/': {
      id: '/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/_wrapper/': {
      id: '/admin/_wrapper/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminWrapperIndexImport
      parentRoute: typeof AdminWrapperImport
    }
    '/user/_wrapper/': {
      id: '/user/_wrapper/'
      path: '/'
      fullPath: '/user/'
      preLoaderRoute: typeof UserWrapperIndexImport
      parentRoute: typeof UserWrapperImport
    }
    '/admin/_wrapper/rentals/$id': {
      id: '/admin/_wrapper/rentals/$id'
      path: '/rentals/$id'
      fullPath: '/admin/rentals/$id'
      preLoaderRoute: typeof AdminWrapperRentalsIdImport
      parentRoute: typeof AdminWrapperImport
    }
    '/admin/_wrapper/books/': {
      id: '/admin/_wrapper/books/'
      path: '/books'
      fullPath: '/admin/books'
      preLoaderRoute: typeof AdminWrapperBooksIndexImport
      parentRoute: typeof AdminWrapperImport
    }
    '/admin/_wrapper/rentals/': {
      id: '/admin/_wrapper/rentals/'
      path: '/rentals'
      fullPath: '/admin/rentals'
      preLoaderRoute: typeof AdminWrapperRentalsIndexImport
      parentRoute: typeof AdminWrapperImport
    }
    '/user/_wrapper/delete-account/': {
      id: '/user/_wrapper/delete-account/'
      path: '/delete-account'
      fullPath: '/user/delete-account'
      preLoaderRoute: typeof UserWrapperDeleteAccountIndexImport
      parentRoute: typeof UserWrapperImport
    }
    '/user/_wrapper/details/': {
      id: '/user/_wrapper/details/'
      path: '/details'
      fullPath: '/user/details'
      preLoaderRoute: typeof UserWrapperDetailsIndexImport
      parentRoute: typeof UserWrapperImport
    }
    '/user/_wrapper/rentals/': {
      id: '/user/_wrapper/rentals/'
      path: '/rentals'
      fullPath: '/user/rentals'
      preLoaderRoute: typeof UserWrapperRentalsIndexImport
      parentRoute: typeof UserWrapperImport
    }
    '/user/_wrapper/stats/': {
      id: '/user/_wrapper/stats/'
      path: '/stats'
      fullPath: '/user/stats'
      preLoaderRoute: typeof UserWrapperStatsIndexImport
      parentRoute: typeof UserWrapperImport
    }
  }
}

// Create and export the route tree

interface AdminWrapperRouteChildren {
  AdminWrapperIndexRoute: typeof AdminWrapperIndexRoute
  AdminWrapperRentalsIdRoute: typeof AdminWrapperRentalsIdRoute
  AdminWrapperBooksIndexRoute: typeof AdminWrapperBooksIndexRoute
  AdminWrapperRentalsIndexRoute: typeof AdminWrapperRentalsIndexRoute
}

const AdminWrapperRouteChildren: AdminWrapperRouteChildren = {
  AdminWrapperIndexRoute: AdminWrapperIndexRoute,
  AdminWrapperRentalsIdRoute: AdminWrapperRentalsIdRoute,
  AdminWrapperBooksIndexRoute: AdminWrapperBooksIndexRoute,
  AdminWrapperRentalsIndexRoute: AdminWrapperRentalsIndexRoute,
}

const AdminWrapperRouteWithChildren = AdminWrapperRoute._addFileChildren(
  AdminWrapperRouteChildren,
)

interface AdminRouteChildren {
  AdminWrapperRoute: typeof AdminWrapperRouteWithChildren
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminWrapperRoute: AdminWrapperRouteWithChildren,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

interface UserWrapperRouteChildren {
  UserWrapperIndexRoute: typeof UserWrapperIndexRoute
  UserWrapperDeleteAccountIndexRoute: typeof UserWrapperDeleteAccountIndexRoute
  UserWrapperDetailsIndexRoute: typeof UserWrapperDetailsIndexRoute
  UserWrapperRentalsIndexRoute: typeof UserWrapperRentalsIndexRoute
  UserWrapperStatsIndexRoute: typeof UserWrapperStatsIndexRoute
}

const UserWrapperRouteChildren: UserWrapperRouteChildren = {
  UserWrapperIndexRoute: UserWrapperIndexRoute,
  UserWrapperDeleteAccountIndexRoute: UserWrapperDeleteAccountIndexRoute,
  UserWrapperDetailsIndexRoute: UserWrapperDetailsIndexRoute,
  UserWrapperRentalsIndexRoute: UserWrapperRentalsIndexRoute,
  UserWrapperStatsIndexRoute: UserWrapperStatsIndexRoute,
}

const UserWrapperRouteWithChildren = UserWrapperRoute._addFileChildren(
  UserWrapperRouteChildren,
)

interface UserRouteChildren {
  UserWrapperRoute: typeof UserWrapperRouteWithChildren
}

const UserRouteChildren: UserRouteChildren = {
  UserWrapperRoute: UserWrapperRouteWithChildren,
}

const UserRouteWithChildren = UserRoute._addFileChildren(UserRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminWrapperRouteWithChildren
  '/books/$id': typeof BooksIdRoute
  '/user': typeof UserWrapperRouteWithChildren
  '/books': typeof BooksIndexRoute
  '/login': typeof LoginIndexRoute
  '/logs-history': typeof LogsHistoryIndexRoute
  '/register': typeof RegisterIndexRoute
  '/admin/': typeof AdminWrapperIndexRoute
  '/user/': typeof UserWrapperIndexRoute
  '/admin/rentals/$id': typeof AdminWrapperRentalsIdRoute
  '/admin/books': typeof AdminWrapperBooksIndexRoute
  '/admin/rentals': typeof AdminWrapperRentalsIndexRoute
  '/user/delete-account': typeof UserWrapperDeleteAccountIndexRoute
  '/user/details': typeof UserWrapperDetailsIndexRoute
  '/user/rentals': typeof UserWrapperRentalsIndexRoute
  '/user/stats': typeof UserWrapperStatsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminWrapperIndexRoute
  '/books/$id': typeof BooksIdRoute
  '/user': typeof UserWrapperIndexRoute
  '/books': typeof BooksIndexRoute
  '/login': typeof LoginIndexRoute
  '/logs-history': typeof LogsHistoryIndexRoute
  '/register': typeof RegisterIndexRoute
  '/admin/rentals/$id': typeof AdminWrapperRentalsIdRoute
  '/admin/books': typeof AdminWrapperBooksIndexRoute
  '/admin/rentals': typeof AdminWrapperRentalsIndexRoute
  '/user/delete-account': typeof UserWrapperDeleteAccountIndexRoute
  '/user/details': typeof UserWrapperDetailsIndexRoute
  '/user/rentals': typeof UserWrapperRentalsIndexRoute
  '/user/stats': typeof UserWrapperStatsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/admin/_wrapper': typeof AdminWrapperRouteWithChildren
  '/books/$id': typeof BooksIdRoute
  '/user': typeof UserRouteWithChildren
  '/user/_wrapper': typeof UserWrapperRouteWithChildren
  '/books/': typeof BooksIndexRoute
  '/login/': typeof LoginIndexRoute
  '/logs-history/': typeof LogsHistoryIndexRoute
  '/register/': typeof RegisterIndexRoute
  '/admin/_wrapper/': typeof AdminWrapperIndexRoute
  '/user/_wrapper/': typeof UserWrapperIndexRoute
  '/admin/_wrapper/rentals/$id': typeof AdminWrapperRentalsIdRoute
  '/admin/_wrapper/books/': typeof AdminWrapperBooksIndexRoute
  '/admin/_wrapper/rentals/': typeof AdminWrapperRentalsIndexRoute
  '/user/_wrapper/delete-account/': typeof UserWrapperDeleteAccountIndexRoute
  '/user/_wrapper/details/': typeof UserWrapperDetailsIndexRoute
  '/user/_wrapper/rentals/': typeof UserWrapperRentalsIndexRoute
  '/user/_wrapper/stats/': typeof UserWrapperStatsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/books/$id'
    | '/user'
    | '/books'
    | '/login'
    | '/logs-history'
    | '/register'
    | '/admin/'
    | '/user/'
    | '/admin/rentals/$id'
    | '/admin/books'
    | '/admin/rentals'
    | '/user/delete-account'
    | '/user/details'
    | '/user/rentals'
    | '/user/stats'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/books/$id'
    | '/user'
    | '/books'
    | '/login'
    | '/logs-history'
    | '/register'
    | '/admin/rentals/$id'
    | '/admin/books'
    | '/admin/rentals'
    | '/user/delete-account'
    | '/user/details'
    | '/user/rentals'
    | '/user/stats'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/admin/_wrapper'
    | '/books/$id'
    | '/user'
    | '/user/_wrapper'
    | '/books/'
    | '/login/'
    | '/logs-history/'
    | '/register/'
    | '/admin/_wrapper/'
    | '/user/_wrapper/'
    | '/admin/_wrapper/rentals/$id'
    | '/admin/_wrapper/books/'
    | '/admin/_wrapper/rentals/'
    | '/user/_wrapper/delete-account/'
    | '/user/_wrapper/details/'
    | '/user/_wrapper/rentals/'
    | '/user/_wrapper/stats/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRouteWithChildren
  BooksIdRoute: typeof BooksIdRoute
  UserRoute: typeof UserRouteWithChildren
  BooksIndexRoute: typeof BooksIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  LogsHistoryIndexRoute: typeof LogsHistoryIndexRoute
  RegisterIndexRoute: typeof RegisterIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRouteWithChildren,
  BooksIdRoute: BooksIdRoute,
  UserRoute: UserRouteWithChildren,
  BooksIndexRoute: BooksIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  LogsHistoryIndexRoute: LogsHistoryIndexRoute,
  RegisterIndexRoute: RegisterIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin",
        "/books/$id",
        "/user",
        "/books/",
        "/login/",
        "/logs-history/",
        "/register/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin": {
      "filePath": "admin",
      "children": [
        "/admin/_wrapper"
      ]
    },
    "/admin/_wrapper": {
      "filePath": "admin/_wrapper.tsx",
      "parent": "/admin",
      "children": [
        "/admin/_wrapper/",
        "/admin/_wrapper/rentals/$id",
        "/admin/_wrapper/books/",
        "/admin/_wrapper/rentals/"
      ]
    },
    "/books/$id": {
      "filePath": "books/$id.tsx"
    },
    "/user": {
      "filePath": "user",
      "children": [
        "/user/_wrapper"
      ]
    },
    "/user/_wrapper": {
      "filePath": "user/_wrapper.tsx",
      "parent": "/user",
      "children": [
        "/user/_wrapper/",
        "/user/_wrapper/delete-account/",
        "/user/_wrapper/details/",
        "/user/_wrapper/rentals/",
        "/user/_wrapper/stats/"
      ]
    },
    "/books/": {
      "filePath": "books/index.tsx"
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/logs-history/": {
      "filePath": "logs-history/index.tsx"
    },
    "/register/": {
      "filePath": "register/index.tsx"
    },
    "/admin/_wrapper/": {
      "filePath": "admin/_wrapper/index.tsx",
      "parent": "/admin/_wrapper"
    },
    "/user/_wrapper/": {
      "filePath": "user/_wrapper/index.tsx",
      "parent": "/user/_wrapper"
    },
    "/admin/_wrapper/rentals/$id": {
      "filePath": "admin/_wrapper/rentals/$id.tsx",
      "parent": "/admin/_wrapper"
    },
    "/admin/_wrapper/books/": {
      "filePath": "admin/_wrapper/books/index.tsx",
      "parent": "/admin/_wrapper"
    },
    "/admin/_wrapper/rentals/": {
      "filePath": "admin/_wrapper/rentals/index.tsx",
      "parent": "/admin/_wrapper"
    },
    "/user/_wrapper/delete-account/": {
      "filePath": "user/_wrapper/delete-account/index.tsx",
      "parent": "/user/_wrapper"
    },
    "/user/_wrapper/details/": {
      "filePath": "user/_wrapper/details/index.tsx",
      "parent": "/user/_wrapper"
    },
    "/user/_wrapper/rentals/": {
      "filePath": "user/_wrapper/rentals/index.tsx",
      "parent": "/user/_wrapper"
    },
    "/user/_wrapper/stats/": {
      "filePath": "user/_wrapper/stats/index.tsx",
      "parent": "/user/_wrapper"
    }
  }
}
ROUTE_MANIFEST_END */
